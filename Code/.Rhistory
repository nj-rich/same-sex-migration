filter(!is.na(staterate_year)) %>%
mutate(stateyear = paste(YEAR, state_name))
mod_F24_mm_f <- F24_mm_f %>%
filter(!is.na(staterate_year)) %>%
mutate(stateyear = paste(YEAR, state_name))
mod_F24_mm_gen <- F24_mm_gen %>%
filter(!is.na(staterate_year)) %>%
mutate(stateyear = paste(YEAR, state_name))
W24_mm_m <- read_csv("C:\\Users\\njrich\\Desktop\\same-sex-migration\\W24_builds\\mm_m.csv") %>%
select(YEAR:time_leg_chunked) %>%
mutate(stateyear = paste(YEAR, state_name))
W24_mm_f <- read_csv("C:\\Users\\njrich\\Desktop\\same-sex-migration\\W24_builds\\mm_f.csv") %>%
select(YEAR:time_leg_chunked) %>%
mutate(stateyear = paste(YEAR, state_name))
W24_mm_gen <- read_csv("C:\\Users\\njrich\\Desktop\\same-sex-migration\\W24_builds\\mm_gen.csv") %>%
select(YEAR:time_leg_chunked) %>%
mutate(stateyear = paste(YEAR, state_name))
mm_f_comp <- mod_F24_mm_f$stateyear %in% mod_F24_mm_f$stateyear
mm_f_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(stateyear %in% mod_F24_mm_f$stateyear)
View(mm_f_comp)
mm_f_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(stateyear %in% W24_mm_f$stateyear)
mm_f_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(!(stateyear %in% W24_mm_f$stateyear))
View(mm_f_comp)
mm_f_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(!(stateyear %in% W24_mm_f$stateyear))
mm_f_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(!(stateyear %in% W24_mm_f$stateyear))
mm_gen_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(!(stateyear %in% W24_mm_gen$stateyear))
mm_m_comp <- mod_F24_mm_f %>% select(stateyear) %>% filter(!(stateyear %in% W24_mm_m$stateyear))
View(compared_mm_gen)
compared_mm_m <- rCompare(mod_F24_mm_m, W24_mm_m, keys = c("YEAR", "state_name"), roundDigits = 6)
compared_mm_f <- rCompare(mod_F24_mm_f, W24_mm_f, keys = c("YEAR", "state_name"), roundDigits = 6)
compared_mm_gen <- rCompare(mod_F24_mm_gen, W24_mm_gen, keys = c("YEAR", "state_name"), roundDigits = 6)
View(compared_mm_gen)
View(compared_mm_gen[["mismatches"]][["STATERATE_YEAR"]])
View(df_samesex_mm_m)
View(compared_mm_m)
View(compared_mm_m[["mismatches"]][["STATERATE_YEAR"]])
View(mod_F24_mm_f)
View(mm_f_comp)
gc()
df <- df_samesex_mm_f
#make year totals excluding each state (no migrant restrictions)
df_yeartotals <- df
state_names <- unique(df$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_yeartotals <- df_yeartotals %>%
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column)
}
gc()
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_names[i]
df_yeartotals <- df_yeartotals %>%
group_by(YEAR) %>%
mutate(columned = sum(!!sym(col_name), na.rm = T)) %>%
ungroup() %>%
rename(!!total_names[i] := columned)
}
df_yeartotals <- df_yeartotals %>%
select(YEAR, state_name, AL_excluded_total:WY_excluded_total)
#make state year totals
df_statetotals <- df %>%
filter(MIGPLAC1 > 0 & MIGPLAC1 < 57) %>%
group_by(YEAR, state_name) %>%
summarize(state_total = sum(in_samesex_weighted, na.rm = T)) %>%
ungroup()
#some states don't exist here so convert later to 0
#set up division
merged_totals <- df_statetotals %>%
left_join(df_yeartotals, join_by(YEAR, state_name), multiple = "any") #get rid of duplicates
samesex_staterate <- merged_totals %>%
pivot_wider(names_from = state_name, values_from = state_total) %>%
mutate_all(~replace(., is.na(.), 0)) #coerce missing values to 0
#do the division
for(i in 1:length(state_names)) {
state = state_names[i]
total = total_names[i]
samesex_staterate <- samesex_staterate %>%
mutate(!!state := !!sym(state)/!!sym(total))
}
samesex_staterate <- samesex_staterate %>%
select(YEAR, AK:WY) %>%
pivot_longer(AK:WY, names_to = "state_name") %>%
rename(staterate_year = value) %>%
mutate(staterate_year = staterate_year * 100)
rm(df, merged_totals, df_statetotals, df_yeartotals, col_name, i, indv_names, state, state_names, total, total_names)
gc()
#ID key variables to merge back in
extra_variables <- df_samesex %>%
distinct(YEAR, state_name, time_since_legalization)
#merge back in
output <-samesex_staterate %>%
left_join(extra_variables, join_by(YEAR, state_name)) %>%
left_join(FRED, join_by(YEAR, state_name))
#make dummy variables for 1-2, 3-4, 5-6, >7 years
output <- output %>%
mutate(time_leg_chunked = case_when(
time_since_legalization == 1 ~ 2,
time_since_legalization == 2 ~ 2,
time_since_legalization == 3 ~ 4,
time_since_legalization == 4 ~ 4,
time_since_legalization == 5 ~ 6,
time_since_legalization == 6 ~ 6,
time_since_legalization >= 7 ~ 7,
))
rm(samesex_staterate, extra_variables)
View(output)
View(df_samesex_mm_f)
gc()
df <- df_samesex_mm_f
#make year totals excluding each state (no migrant restrictions)
df_yeartotals <- df
state_names <- unique(df$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_yeartotals <- df_yeartotals %>%
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column)
}
gc()
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_names[i]
df_yeartotals <- df_yeartotals %>%
group_by(YEAR) %>%
mutate(columned = sum(!!sym(col_name), na.rm = T)) %>%
ungroup() %>%
rename(!!total_names[i] := columned)
}
df_yeartotals <- df_yeartotals %>%
select(YEAR, state_name, AL_excluded_total:WY_excluded_total)
#make state year totals
df_statetotals <- df %>%
filter(MIGPLAC1 > 0 & MIGPLAC1 < 57) %>%
group_by(YEAR, state_name) %>%
summarize(state_total = sum(in_samesex_weighted, na.rm = T)) %>%
ungroup()
#some states don't exist here so convert later to 0
#set up division
merged_totals <- df_statetotals %>%
left_join(df_yeartotals, join_by(YEAR, state_name), multiple = "any") #get rid of duplicates
samesex_staterate <- merged_totals %>%
pivot_wider(names_from = state_name, values_from = state_total) %>%
mutate_all(~replace(., is.na(.), 0)) #coerce missing values to 0
#do the division
for(i in 1:length(state_names)) {
state = state_names[i]
total = total_names[i]
samesex_staterate <- samesex_staterate %>%
mutate(!!state := !!sym(state)/!!sym(total))
}
samesex_staterate <- samesex_staterate %>%
select(YEAR, AK:WY) %>%
pivot_longer(AK:WY, names_to = "state_name") %>%
rename(staterate_year = value) %>%
mutate(staterate_year = staterate_year * 100)
gc()
#ID key variables to merge back in
extra_variables <- df_samesex %>%
distinct(YEAR, state_name, time_since_legalization)
#merge back in
output <-samesex_staterate %>%
left_join(extra_variables, join_by(YEAR, state_name)) %>%
left_join(FRED, join_by(YEAR, state_name))
#make dummy variables for 1-2, 3-4, 5-6, >7 years
output <- output %>%
mutate(time_leg_chunked = case_when(
time_since_legalization == 1 ~ 2,
time_since_legalization == 2 ~ 2,
time_since_legalization == 3 ~ 4,
time_since_legalization == 4 ~ 4,
time_since_legalization == 5 ~ 6,
time_since_legalization == 6 ~ 6,
time_since_legalization >= 7 ~ 7,
))
view(state_names)
view(total_names)
View(df_yeartotals)
View(df_statetotals)
View(samesex_staterate)
?left_join
View(merged_totals)
samesex_staterate <- merged_totals %>%
pivot_wider(names_from = state_name, values_from = state_total) %>%
mutate_all(~replace(., is.na(.), 0)) #coerce missing values to 0
View(samesex_staterate)
gc()
df <- df_samesex_mm_f
#make year totals excluding each state (no migrant restrictions)
df_yeartotals <- df
state_names <- unique(df$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_yeartotals <- df_yeartotals %>%
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column)
}
gc()
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_names[i]
df_yeartotals <- df_yeartotals %>%
group_by(YEAR) %>%
mutate(columned = sum(!!sym(col_name), na.rm = T)) %>%
ungroup() %>%
rename(!!total_names[i] := columned)
}
df_yeartotals <- df_yeartotals %>%
select(YEAR, state_name, AL_excluded_total:WY_excluded_total)
#make state year totals
df_statetotals <- df %>%
filter(MIGPLAC1 > 0 & MIGPLAC1 < 57) %>%
group_by(YEAR, state_name) %>%
summarize(state_total = sum(in_samesex_weighted, na.rm = T)) %>%
ungroup()
#some states don't exist here so convert later to 0
#set up division
merged_totals <- df_statetotals %>%
left_join(df_yeartotals, join_by(YEAR, state_name), multiple = "any") #get rid of duplicates
samesex_staterate <- merged_totals %>%
pivot_wider(names_from = state_name, values_from = state_total) %>%
mutate_all(~replace(., is.na(.), 0)) #coerce missing values to 0
View(samesex_staterate)
merged_totals <- df_statetotals %>%
left_join(df_yeartotals, join_by(YEAR, state_name), multiple = "any") #get rid of duplicates
View(merged_totals)
view(samesex_staterate %>% select(MT))
for(i in 1:length(state_names)) {
state = state_names[i]
total = total_names[i]
samesex_staterate <- samesex_staterate %>%
mutate(!!state := !!sym(state)/!!sym(total))
}
View(samesex_staterate)
knitr::opts_chunk$set(echo = TRUE)
gc()
install.packages("dataCompareR")
library(dataCompareR) #for rCompare
library(data.table) #for data loading
library(haven) #for writing to dta
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
library(srvyr) #for weighting
gc()
#mac
F24_pull1 <- fread("/Users/njrich/Downloads/F24_pull1.csv")
#windows
?function
knitr::opts_chunk$set(echo = TRUE)
gc()
install.packages("dataCompareR")
library(dataCompareR) #for rCompare
library(data.table) #for data loading
library(haven) #for writing to dta
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
library(srvyr) #for weighting
install.packages("dataCompareR")
knitr::opts_chunk$set(echo = TRUE)
gc()
install.packages("dataCompareR")
#library(dataCompareR) #for rCompare
library(data.table) #for data loading
library(haven) #for writing to dta
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
library(srvyr) #for weighting
install.packages("dataCompareR")
?srvyr
gc()
#mac
F24_pull1 <- fread("/Users/njrich/Downloads/F24_pull1.csv") %>% #didn't break
clean_names()
?fread
knitr::opts_chunk$set(echo = TRUE)
gc()
library(data.table) #for data loading
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
library(srvyr) #for weighting
?clean_names
gc()
library(data.table) #for data loading
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
library(janitor) #for clean_names
gc()
library(data.table) #for data loading
library(readxl) #for reading in FRED data
library(tidyverse) #for data work
install.packages("janitor")
library(janitor) #for clean_names
library(srvyr) #for weighting
gc()
#mac
F24_pull1 <- fread("/Users/njrich/Downloads/F24_pull1.csv") %>% #didn't break
clean_names()
#windows
gc()
#mac
summary_stats <- svy <- as_survey_rep(F24_pull1, weight = perwt, repweights = matches("REPWTP[0-9]+"),
type = "JK1", scale = 4/ 80 , rscales = rep(1, 80 ), mse = TRUE)
gc()
#mac
summary_stats <- as_survey_rep(F24_pull1, weight = perwt, repweights = matches("REPWTP[0-9]+"), type = "JK1", scale = 4/80, rscales = rep(1, 80), mse = TRUE) #from IPUMS website
glimpse(F24_pull1)
colnames(F24_pull1)
gc()
#mac
summary_stats <- as_survey_rep(F24_pull1, weight = perwt, repweights = matches("REPWTP[0-9]+"), type = "JK1", scale = 4/80, rscales = rep(1, 80), mse = TRUE) #from IPUMS website
summary_stats <- as_survey_rep(F24_pull1, weight = perwt)
?as_survey_rep
#mac
summary_stats <- as_survey_rep(F24_pull1, weight = perwt, repweights = matches("repwtp[0-9]+"), type = "JK1", scale = 4/80, rscales = rep(1, 80), mse = TRUE) #from IPUMS website - watch
summary_stats <- as_survey_rep(F24_pull1, weight = perwt, repweights = matches("repwtp[0-9]+"))
gc()
#mac
summary_stats <- as_survey_rep(F24_pull1, weights = perwt, repweights = matches("repwtp[0-9]+"), type = "JK1", scale = 4/80, rscales = rep(1, 80), mse = TRUE) #from IPUMS website - watch
summary_stats <- as_survey_rep(F24_pull1, weights = perwt, repweights = matches("repwtp[0-9]+"))
summary_stats <- as_survey_rep(F24_pull1, weights = perwt)
?as_survey
gc()
#mac
summary_stats <- as_survey(F24_pull1, weights = perwt) #note: exclude rep_wts so errors are inaccurate (file otherwise insanely big- talk someone about it)
gc()
#mac
summary_stats <- as_survey(F24_pull1, weights = perwt) #note: exclude rep_wts so errors are inaccurate (file otherwise insanely big- talk someone about it)
stata_analysis <- F24_pull1
#rm(F24_pull1)
#windows
gc()
#label states using chunking for memory management
add_context <- function(df_samesex) {
gc()
df_samesex <- df_samesex %>%
mutate(state_name = as.character(statefip))
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "1" ~ "AL",
state_name == "2" ~ "AK",
state_name == "4" ~ "AZ",
state_name == "5" ~ "AR",
state_name == "6" ~ "CA",
state_name == "8" ~ "CO",
state_name == "9" ~ "CT",
state_name == "10" ~ "DE",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "11" ~ "DC",
state_name == "12" ~ "FL",
state_name == "13" ~ "GA",
state_name == "15" ~ "HI",
state_name == "16" ~ "ID",
state_name == "17" ~ "IL",
state_name == "18" ~ "IN",
state_name == "19" ~ "IA",
state_name == "20" ~ "KS",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "21" ~ "KY",
state_name == "22" ~ "LA",
state_name == "23" ~ "MI",
state_name == "24" ~ "MD",
state_name == "25" ~ "MA",
state_name == "26" ~ "ME",
state_name == "27" ~ "MN",
state_name == "28" ~ "MS",
state_name == "29" ~ "MO",
state_name == "30" ~ "MT",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "31" ~ "NE",
state_name == "32" ~ "NV",
state_name == "33" ~ "NH",
state_name == "34" ~ "NJ",
state_name == "35" ~ "NM",
state_name == "36" ~ "NY",
state_name == "37" ~ "NC",
state_name == "38" ~ "ND",
state_name == "39" ~ "OH",
state_name == "40" ~ "OK",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "41" ~ "OR",
state_name == "42" ~ "PA",
state_name == "44" ~ "RI",
state_name == "45" ~ "SC",
state_name == "46" ~ "SD",
state_name == "47" ~ "TN",
state_name == "48" ~ "TX",
state_name == "49" ~ "UT",
state_name == "50" ~ "VT",
state_name == "51" ~ "VA",
state_name == "53" ~ "WA",
state_name == "54" ~ "WV",
state_name == "55" ~ "WI",
state_name == "56" ~ "WY",
state_name == "72" ~ "PR",
state_name == "97" ~ "OMI", #Overseas Military Installations
state_name == "99" ~ NA,
TRUE ~ state_name
))
#label legalization date from Gerstmann "2012" pqper
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = state_name)
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when (
date_legalization == "AL" ~ "2015",
date_legalization == "AK" ~ "2014",
date_legalization == "AZ" ~ "2014",
date_legalization == "AR" ~ "2015",
date_legalization == "CA" ~ "2013", #watch legalized/repealed timeline
date_legalization == "CO" ~ "2014",
date_legalization == "CT" ~ "2008",
date_legalization == "DE" ~ "2013",
date_legalization == "DC" ~ "2009",
date_legalization == "FL" ~ "2015",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "GA" ~ "2015",
date_legalization == "HI" ~ "2013",
date_legalization == "ID" ~ "2014",
date_legalization == "IL" ~ "2013",
date_legalization == "IN" ~ "2014",
date_legalization == "IA" ~ "2009",
date_legalization == "KS" ~ "2014",
date_legalization == "KY" ~ "2015",
date_legalization == "LA" ~ "2015",
date_legalization == "ME" ~ "2012",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "MD" ~ "2012",
date_legalization == "MA" ~ "2003",
date_legalization == "MI" ~ "2015",
date_legalization == "MN" ~ "2013",
date_legalization == "MS" ~ "2015",
date_legalization == "MO" ~ "2015",
date_legalization == "MT" ~ "2014",
date_legalization == "NE" ~ "2015",
date_legalization == "NV" ~ "2014",
date_legalization == "NH" ~ "2009",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "NJ" ~ "2013",
date_legalization == "NM" ~ "2013",
date_legalization == "NY" ~ "2011",
date_legalization == "NC" ~ "2014",
date_legalization == "ND" ~ "2015",
date_legalization == "OH" ~ "2015",
date_legalization == "OK" ~ "2014",
date_legalization == "OR" ~ "2014",
date_legalization == "PA" ~ "2014",
date_legalization == "RI" ~ "2013",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "SC" ~ "2014",
date_legalization == "SD" ~ "2015",
date_legalization == "TN" ~ "2015",
date_legalization == "TX" ~ "2015",
date_legalization == "UT" ~ "2014",
date_legalization == "VT" ~ "2009",
date_legalization == "VA" ~ "2014",
date_legalization == "WA" ~ "2012",
date_legalization == "WV" ~ "2014",
date_legalization == "WI" ~ "2014",
date_legalization == "WY" ~ "2014",
date_legalization == "PR" ~ "2015",
date_legalization == "OMI" ~ "2015",
TRUE ~ date_legalization
))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = as.numeric(date_legalization))
return(df_samesex)
}
summary_stats <- add_context(summary_stats)
gc()
#label states using chunking for memory management
#add_context <- function(df_samesex) {
gc()
df_samesex <- summary_stats
df_samesex <- df_samesex %>%
mutate(state_name = as.character(statefip))
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "1" ~ "AL",
state_name == "2" ~ "AK",
state_name == "4" ~ "AZ",
state_name == "5" ~ "AR",
state_name == "6" ~ "CA",
state_name == "8" ~ "CO",
state_name == "9" ~ "CT",
state_name == "10" ~ "DE",
TRUE ~ state_name))
