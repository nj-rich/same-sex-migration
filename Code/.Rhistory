library(tidyverse)
install.packages("data.table")
library(data.table)
pull1 <- fread("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv")
head_view <- head(pull1, 10)
View(head_view)
pull1 <- pull1 %>%
mutate("samesex" = SPLOC)
initial_head_view <- head(pull1, 10)
head(pull1)
rm(list = ls())
library(tidyverse)
install.packages("data.table")
library(data.table)
pull1 <- fread("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv")
initial_head_view <- head(pull1, 10)
df <- pull1
View(initial_head_view)
#make partner list
partners <- df %>%
select(YEAR, SAMPLE, PERNUM, SEX)
View(partners)
head(partners)
?left_join
?join_by
rm(partners)
head_partner <- head(partner)
#make partner list
partner <- df %>%
select(YEAR, SAMPLE, PERNUM, SEX)
head_partner <- head(partner)
View(head_partner)
#join partners with
df <- df %>%
left_join(partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
#join partners with
df <- df %>%
left_join(partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
?fread
memory.limit(size = 10096)
ulimit -a
class(df)
class(partner)
df <- df %>%
left_join(partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
memory.size(max = FALSE)
rm(head_partner, initial_head_view, pull1)
df <- df %>%
left_join(partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
?merge
library(tidyverse)
install.packages("data.table")
library(data.table)
rm(list = ls())
library(tidyverse)
install.packages("data.table")
library(data.table)
pull1 <- fread("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv")
initial_head_view <- head(pull1, 10)
df <- pull1
rm(pull1)
#join partners with
df <- merge(df, partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
#make partner list
partner <- df %>%
select(YEAR, SAMPLE, PERNUM, SEX)
head_partner <- head(partner)
#join partners with
df <- merge(df, partner, join_by(SPLOC == PERNUM, YEAR, SAMPLE))
#join partners with
df <- merge(df, partner, by = c(YEAR, SAMPLE), by.x = SPLOC, by.y = PERNUM, all.x = T)
View(initial_head_view)
#join partners with
df <- merge(df, partner, by = c(YEAR, SAMPLE), by.df = SPLOC, by.partner = PERNUM, all.df = T)
#join partners with
df <- merge(df, partner, by = c(YEAR, SAMPLE))
View(head_partner)
#join partners with
df <- merge(df, partner, by = YEAR)
#join partners with
df_test <- df[partner, on = .(YEAR, SAMPLE, SPLOC == PERNUM)]
#join partners with
df_test <- df[partner, on = .(YEAR, SAMPLE, PERNUM)]
#join partners with
df_test <- df[partner, on = .(YEAR, SERIAL, PERNUM)]
#make partner list
partner <- df %>%
select(YEAR, SERIAL, PERNUM, SEX)
head_partner <- head(partner)
#join partners with
df_test <- df[partner, on = .(YEAR, SERIAL, PERNUM)]
View(partner)
View(initial_head_view)
View(head_partner)
#join partners with
df_test <- df[partner, on = .(YEAR, SERIAL, PERNUM)]
#join partners with
df_test <- df[partner, on = .(YEAR, SERIAL, SPLOC == PERNUM)]
View(df)
#join partners with og
df_test <- merge(df, partner, by = c("YEAR", "SERIAL", "PERNUM"))
df_filtered <- df %>%
filter(SPLOC != 0)
partner <- df %>%
select(YEAR, SERIAL, PERNUM, SEX) %>%
filter(SPLOC != 0)
partner <- df %>%
select(YEAR, SERIAL, PERNUM, SEX, SPLOC) %>%
filter(SPLOC != 0)
rm(list = ls())
pull1 <- fread("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv")
gc()
library(tidyverse)
#to help deal with large data files
install.packages("arrow") #for arrow
library(arrow)
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
install.packages("arrow") #for arrow
library(arrow)
#loading data
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
install.packages("arrow")
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
library(arrow)
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
?arrow
ENV LIBARROW_MINIMAL false
ENV LIBARROW_MINIMAL false
arrow_info()
install.packages("updateR")
library(updateR)
gc()
library(tidyverse)
#install.packages("arrow")
source("https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R")
install_arrow(minimal = Sys.getenv("LIBARROW_MINIMAL", FALSE)) #to turn off minimal... see if need this long term
library(arrow)
df_samesex <- df_samesex %>%
mutate(STATEFIP = case_when(
STATEFIP == 1 ~ "AL",
STATEFIP == 1 ~ "AL",
STATEFIP == 1 ~ "AL",
STATEFIP == 1 ~ "AL",
STATEFIP == 1 ~ "AL",
STATEFIP == 1 ~ "AL",
))
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
#note might need to redownload to factor in ASECWT weights - watch individual v household serial and rules of weights
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
#will expand variables over time  (tentative use FIP)
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner")) %>% #WATCH CLARITY WHERE SPLOC IS
collect()
df_samesex <- df_partners %>% #WATCH CLARITY WHERE SPLOC IS
mutate(in_samesex = case_when(
(SEX.indv == 1) & (SEX.partner == 1) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 2) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 1) ~ 0, #straight
(SEX.indv == 1) & (SEX.partner == 2) ~ 0, #straight
(SEX.indv == 9) | (SEX.partner == 9) ~ NA #NA
))
rm(arrow_repos, create_package_with_all_dependencies, install_arrow, on_rosetta, wslify_path)
rm(reload_arrow)
gc()
rm(partner)
rm(df_partners)
gc()
library(tidyverse)
#install.packages("arrow")
source("https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R")
install_arrow(minimal = Sys.getenv("LIBARROW_MINIMAL", FALSE)) #to turn off minimal... see if need this long term
library(arrow)
rm(arrow_repos, create_package_with_all_dependencies, install_arrow, on_rosetta, wslify_path, reload_arrow)
```
install.packages("arrow", repos = arrow_repos(repos, nightly), ...)
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
library(tidyverse)
library(arrow)
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
?source
gc()
library(tidyverse)
#install.packages("arrow")
source("https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R")
install_arrow(minimal = Sys.getenv("LIBARROW_MINIMAL", FALSE)) #to turn off minimal... see if need this long term
library(arrow)
rm(arrow_repos, create_package_with_all_dependencies, install_arrow, on_rosetta, wslify_path, reload_arrow)
gc()
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
#note might need to redownload to factor in ASECWT weights - watch individual v household serial and rules of weights
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
#will expand variables over time  (tentative use FIP)
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner")) %>% #WATCH CLARITY WHERE SPLOC IS
collect()
df_samesex <- df_partners %>% #WATCH CLARITY WHERE SPLOC IS
mutate(in_samesex = case_when(
(SEX.indv == 1) & (SEX.partner == 1) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 2) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 1) ~ 0, #straight
(SEX.indv == 1) & (SEX.partner == 2) ~ 0, #straight
(SEX.indv == 9) | (SEX.partner == 9) ~ NA #NA
))
gc()
df_samesex <- df_partners %>% #WATCH CLARITY WHERE SPLOC IS
mutate(in_samesex = case_when(
(SEX.indv == 1) & (SEX.partner == 1) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 2) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 1) ~ 0, #straight
(SEX.indv == 1) & (SEX.partner == 2) ~ 0, #straight
(SEX.indv == 9) | (SEX.partner == 9) ~ NA #NA
))
?memory.limit()
?memory.size()
gc()
gc()
library(tidyverse)
#install.packages("arrow")
source("https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R")
install_arrow(minimal = Sys.getenv("LIBARROW_MINIMAL", FALSE)) #to turn off minimal... see if need this long term
library(arrow)
rm(arrow_repos, create_package_with_all_dependencies, install_arrow, on_rosetta, wslify_path, reload_arrow)
gc()
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
#note might need to redownload to factor in ASECWT weights - watch individual v household serial and rules of weights
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
#will expand variables over time  (tentative use FIP)
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner")) %>% #WATCH CLARITY WHERE SPLOC IS
collect()
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner")) %>% #WATCH CLARITY WHERE SPLOC IS
collect()
rm(list = ls())
gc()
gc()
library(tidyverse)
#install.packages("arrow")
source("https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R")
install_arrow(minimal = Sys.getenv("LIBARROW_MINIMAL", FALSE)) #to turn off minimal... see if need this long term
library(arrow)
rm(arrow_repos, create_package_with_all_dependencies, install_arrow, on_rosetta, wslify_path, reload_arrow)
gc()
pull1_csv <- open_dataset(
sources = "/Users/njrich/Desktop/Econ495/same-sex-migration/Data/pull1/pull1.csv",
col_types = schema(CBSERIAL = int64(), COUPLETYPE = int64(), SSMC = int64(),
MIGPLAC1 = int64(), MIGCOUNTY1 = int64(), SPMPOV = int64(),
OFFPOV = int64()),
format = "csv")
#note might need to redownload to factor in ASECWT weights - watch individual v household serial and rules of weights
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX) %>% #rename sex var for clarity?
compute()
#will expand variables over time  (tentative use FIP)
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner")) %>% #WATCH CLARITY WHERE SPLOC IS
collect()
?dummy_cols
library(tidyverse)
library(data.table)
?dummy_cols
?dumm_columns()
?dummy_columns
?dummy.coef
?model.matrix
library(fastDummies)
install.packages("fastDummies")
library(fastDummies)
?dummy_cols()
?dummy_columns()
?step_dummy()
