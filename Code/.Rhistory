pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
?str_remove
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE))
View(state_pop)
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str.remove(DATE, "-01-01"))
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01"))
View(state_pop)
gc()
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = str_remove(POP, "."))
gc()
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = as.character(POP)) %>%
mutate(POP = str_remove(POP, ".")) %>%
mutate(POP = as.numeric(POP)) %>%
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = as.character(POP)) %>%
mutate(POP = str_remove(POP, ".")) %>%
mutate(POP = as.numeric(POP))
View(state_pop)
gc()
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = as.character(POP)) %>%
mutate(POP = str_remove(POP, "//.")) %>%
mutate(POP = as.numeric(POP))
View(state_pop)
gc()
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = as.character(POP)) %>%
mutate(POP = str_remove(POP, "/.")) %>%
mutate(POP = as.numeric(POP))
View(state_pop)
gc()
state_pop <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual")
#match up columns
state_pop <- state_pop %>%
pivot_longer(AKPOP:WYPOP, names_to = "STATE") %>%
rename("POP" = "value")
#match up strings
state_pop <- state_pop %>%
mutate(STATE = str_remove(STATE, "POP")) %>%
mutate(DATE = as.character(DATE)) %>%
mutate(DATE = str_remove(DATE, "-01-01")) %>%
mutate(DATE = as.numeric(DATE)) %>%
mutate(POP = as.character(POP)) %>%
mutate(POP = str_remove(POP, "\\.")) %>%
mutate(POP = as.numeric(POP))
View(state_pop)
gc()
library(tidyverse) #for data work
library(data.table) #for data loading
library(haven) #for writing to dta
library(readxl) #for reading in FRED data
#watch these packages for dummies
install.packages("fastDummies") # --- recipes package might also work or tidymodels? (step_dummy maybe work darn recipe use confusion) (or not- different method) - issue: combo 2 years - check
library(fastDummies)
gc()
pull1_csv <- fread("C:\\Users\\njrich\\Downloads\\pull1.csv")
#note might need to redownload to factor in ASECWT weights - watch individual v household serial and rules of weights - questions about ASECWT only in IPUMS CPS maybe also widow var... hmm.....
gc()
pull1_csv <- pull1_csv %>%
select(-SAMPLE, -CBSERIAL, -HHWT, -CLUSTER, -STRATA, -GQ)
#note: need to add ASECWT weight var after looking
gc()
partner <- pull1_csv %>%
select(YEAR, SERIAL, PERNUM, SEX)
gc()
df_partners <- pull1_csv %>%
left_join(partner, join_by(YEAR, SERIAL, SPLOC == PERNUM), suffix = c(".indv", ".partner"))
gc()
df_samesex <- df_partners %>% #WATCH CLARITY WHERE SPLOC IS
mutate(in_samesex = case_when(
(SEX.indv == 1) & (SEX.partner == 1) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 2) ~ 1, #gay
(SEX.indv == 2) & (SEX.partner == 1) ~ 0, #straight
(SEX.indv == 1) & (SEX.partner == 2) ~ 0, #straight
(SEX.indv == 9) | (SEX.partner == 9) ~ NA #NA
)) %>%
mutate(in_samesex_weighted = in_samesex * PERWT) #NOTE: I AM NOT SURE IF THIS IS CORRECT METHOD, SE OFF NOT ADJUSTED; see https://forum.ipums.org/t/identifying-same-sex-and-opposite-sex-couples/3878 for more help; https://forum.ipums.org/t/how-to-identify-same-sex-couples/2554/5
rm(partner, df_partners, pull1_csv)
#PUT IN PERWT HERE WATCH NEED DIVIDE BY 100 AND GET DECIMALS
#label states
gc()
df_samesex <- df_samesex %>%
mutate(state_name = as.character(STATEFIP)) #better way to do this- see 309 notes too? (fixing state_name=NA issue)
df_samesex <- df_samesex %>% #ok this seems to work
mutate(state_name = case_when(
state_name == "1" ~ "AL",
state_name == "2" ~ "AK",
state_name == "4" ~ "AZ",
state_name == "5" ~ "AR",
state_name == "6" ~ "CA",
state_name == "8" ~ "CO",
state_name == "9" ~ "CT",
state_name == "10" ~ "DE",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "11" ~ "DC",
state_name == "12" ~ "FL",
state_name == "13" ~ "GA",
state_name == "15" ~ "HI",
state_name == "16" ~ "ID",
state_name == "17" ~ "IL",
state_name == "18" ~ "IN",
state_name == "19" ~ "IA",
state_name == "20" ~ "KS",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "21" ~ "KY",
state_name == "22" ~ "LA",
state_name == "23" ~ "MI",
state_name == "24" ~ "MD",
state_name == "25" ~ "MA",
state_name == "26" ~ "ME",
state_name == "27" ~ "MN",
state_name == "28" ~ "MS",
state_name == "29" ~ "MO",
state_name == "30" ~ "MT",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>%
mutate(state_name = case_when(
state_name == "31" ~ "NE",
state_name == "32" ~ "NV",
state_name == "33" ~ "NH",
state_name == "34" ~ "NJ",
state_name == "35" ~ "NM",
state_name == "36" ~ "NY",
state_name == "37" ~ "NC",
state_name == "38" ~ "ND",
state_name == "39" ~ "OH",
state_name == "40" ~ "OK",
TRUE ~ state_name))
gc()
df_samesex <- df_samesex %>% #this seems to be the only clause that works...
mutate(state_name = case_when(
state_name == "41" ~ "OR",
state_name == "42" ~ "PA",
state_name == "44" ~ "RI",
state_name == "45" ~ "SC",
state_name == "46" ~ "SD",
state_name == "47" ~ "TN",
state_name == "48" ~ "TX",
state_name == "49" ~ "UT",
state_name == "50" ~ "VT",
state_name == "51" ~ "VA",
state_name == "53" ~ "WA",
state_name == "54" ~ "WV",
state_name == "55" ~ "WI",
state_name == "56" ~ "WY",
state_name == "72" ~ "PR",
state_name == "97" ~ "OMI", #Overseas Military Installations
state_name == "99" ~ NA,
TRUE ~ state_name
))
#label legalization date from Gerstmann "2012" OG pqper (see issues)
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = state_name)
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when (
date_legalization == "AL" ~ "2015",
date_legalization == "AK" ~ "2014",
date_legalization == "AZ" ~ "2014",
date_legalization == "AR" ~ "2015",
date_legalization == "CA" ~ "2013", #watch legalized/repealed issue
date_legalization == "CO" ~ "2014",
date_legalization == "CT" ~ "2008",
date_legalization == "DE" ~ "2013",
date_legalization == "DC" ~ "2009",
date_legalization == "FL" ~ "2015",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "GA" ~ "2015",
date_legalization == "HI" ~ "2013",
date_legalization == "ID" ~ "2014",
date_legalization == "IL" ~ "2013",
date_legalization == "IN" ~ "2014",
date_legalization == "IA" ~ "2009",
date_legalization == "KS" ~ "2014",
date_legalization == "KY" ~ "2015",
date_legalization == "LA" ~ "2015",
date_legalization == "ME" ~ "2012",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "MD" ~ "2012",
date_legalization == "MA" ~ "2003",
date_legalization == "MI" ~ "2015",
date_legalization == "MN" ~ "2013",
date_legalization == "MS" ~ "2015",
date_legalization == "MO" ~ "2015",
date_legalization == "MT" ~ "2014",
date_legalization == "NE" ~ "2015",
date_legalization == "NV" ~ "2014",
date_legalization == "NH" ~ "2009",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "NJ" ~ "2013",
date_legalization == "NM" ~ "2013",
date_legalization == "NY" ~ "2011",
date_legalization == "NC" ~ "2014",
date_legalization == "ND" ~ "2015",
date_legalization == "OH" ~ "2015",
date_legalization == "OK" ~ "2014",
date_legalization == "OR" ~ "2014",
date_legalization == "PA" ~ "2014",
date_legalization == "RI" ~ "2013",
TRUE ~ date_legalization))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = case_when(
date_legalization == "SC" ~ "2014",
date_legalization == "SD" ~ "2015",
date_legalization == "TN" ~ "2015",
date_legalization == "TX" ~ "2015",
date_legalization == "UT" ~ "2014",
date_legalization == "VT" ~ "2009",
date_legalization == "VA" ~ "2014",
date_legalization == "WA" ~ "2012",
date_legalization == "WV" ~ "2014",
date_legalization == "WI" ~ "2014",
date_legalization == "WY" ~ "2014",
date_legalization == "PR" ~ "2015", #from googling
date_legalization == "OMI" ~ "2015", #from guessing
TRUE ~ date_legalization
))
gc()
df_samesex <- df_samesex %>%
mutate(date_legalization = as.numeric(date_legalization))
#make time_since variable
gc()
df_samesex <- df_samesex %>%
mutate(time_since_legalization = if_else(YEAR - date_legalization < 0, NA, YEAR - date_legalization)) #check if this makes sense
gc()
df_samesex_mm <- df_samesex %>%
filter(AGE >= 30 & AGE <= 64) %>%
filter(YEAR >= 2001 & YEAR <= 2015) %>% ##interesting include 2001
filter(MARST == 4 | MARST == 5 | MARST == 6) %>% #includes those divorced, widowed, never married/single (NOTE: this excludes those married, separated, blank/missing)
filter(!is.na(MIGPLAC1)) #get interstate migrants only
gc()
#read in data
#FRED <- read_excel("/Users/njrich/Desktop/Econ495/same-sex-migration/Data/FRED_statepops/STATEPOP.xls", sheet = "Annual") #for Mac
FRED <- read_excel("C:\\Users\\njrich\\Downloads\\STATEPOP.xls", sheet = "Annual") #for Windows
#match up columns
FRED <- FRED %>%
pivot_longer(AKPOP:WYPOP, names_to = "state_name") %>%
rename("state_pop" = "value") %>%
rename("YEAR" = "DATE")
#match up strings
FRED <- FRED %>%
mutate(state_name = str_remove(state_name, "POP")) %>%
mutate(YEAR = as.character(YEAR)) %>%
mutate(YEAR = str_remove(YEAR, "-01-01")) %>%
mutate(YEAR = as.numeric(YEAR)) %>%
mutate(state_pop = as.character(state_pop)) %>%
mutate(state_pop = str_remove(state_pop, "\\.")) %>%
mutate(state_pop = as.numeric(state_pop))
state_names <- unique(df_samesex_mm$state_name)
indv_names <- paste0(state_names, "exclude_indv")
?paste0
indv_names <- paste0(state_names, "exclude_indv", sep = "_")
indv_names <- paste(state_names, "exclude_indv", sep = "_")
indv_names <- paste("exclude_indv", state_names, sep = "_")
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>%
mutate(indv_names[i] = if_else(state_name != state_names[i], in_samesex_weighted, 0))
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>%
mutate(indv_names[i] = if_else(state_name != state_names[i], in_samesex_weighted, 0))
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>%
mutate(x = if_else(state_name != state_names[i], in_samesex_weighted, 0))
}
View(df_samesex_mm)
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(invd_names[i] = column)
gc()
df_samesex_mm <- df_samesex %>%
filter(AGE >= 30 & AGE <= 64) %>%
filter(YEAR >= 2001 & YEAR <= 2015) %>% ##interesting include 2001
filter(MARST == 4 | MARST == 5 | MARST == 6) %>% #includes those divorced, widowed, never married/single (NOTE: this excludes those married, separated, blank/missing)
filter(!is.na(MIGPLAC1)) #get interstate migrants only
indv_names <- paste(state_names, "excluded_indv", sep = "_")
gc()
state_names <- unique(df_samesex_mm$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(invd_names[i] = column)
?rename
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!invd_names[i] = column)
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!invd_names[i] := column)
}
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column)
}
head(df_samesex_mm)
View(df_samesex_mm)
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(!!indv_names[i])) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(indv_names[i])) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
for(i in 1:length(state_names)) {
object <- df_samesex_mm[indv_names[i]]
#df_samesex_mm <- df_samesex_mm %>%
#group_by(YEAR) %>%
#mutate(column = sum(indv_names[i])) %>%
#rename(!!total_names[i] := column) #thank you chatgpt
}
for(i in 1:length(state_names)) {
object <- df_samesex_mm$indv_names[i]
#df_samesex_mm <- df_samesex_mm %>%
#group_by(YEAR) %>%
#mutate(column = sum(indv_names[i])) %>%
#rename(!!total_names[i] := column) #thank you chatgpt
}
df_samesex_mm$indv_names[1]
!!indv_names[1]
df_samesex[, indv_names[1]]
df_samesex_mm[, indv_names[1]]
df_samesex_mm[, indv_names, drop = F]
class(indv_names)
a <- c("b")
class(a)
df_samesex_mm[, ..indv_names, drop = F]
df_samesex_mm[, ..indv_names[1], drop = F]
df_samesex_mm[, ..indv_names[[1]], drop = F)
df_samesex_mm[, ..indv_names[[1]], drop = F]
df_samesex_mm[, .data[[indv_names[1]]]
df_samesex_mm[, .data[indv_names[1]], drop= F]
df_samesex_mm[, .data[indv_names[1]], drop= F]
df_samesex_mm[, ..indv_names, drop = F]
test <- indv_names[1]
df_samesex_mm[, ..test, drop = F]
gc()
state_names <- unique(df_samesex_mm$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column) #thank you chatgpt
}
gc()
df_samesex_mm <- df_samesex %>%
filter(AGE >= 30 & AGE <= 64) %>%
filter(YEAR >= 2001 & YEAR <= 2015) %>% ##interesting include 2001
filter(MARST == 4 | MARST == 5 | MARST == 6) %>% #includes those divorced, widowed, never married/single (NOTE: this excludes those married, separated, blank/missing)
filter(!is.na(MIGPLAC1)) #get interstate migrants only
gc()
state_names <- unique(df_samesex_mm$state_name)
indv_names <- paste(state_names, "excluded_indv", sep = "_")
for(i in 1:length(state_names)) {
df_samesex_mm <- df_samesex_mm %>% #restrict this to gay earlier?
mutate(column = if_else(state_name != state_names[i], in_samesex_weighted, 0)) %>%
rename(!!indv_names[i] := column) #thank you chatgpt
}
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_name[i] #thank you data.frame
col <- df_samesex_mm[, ..col_name, drop = F]
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(col)) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_names[i] #thank you data.frame
col <- df_samesex_mm[, ..col_name, drop = F]
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(col)) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
for(i in 1:length(state_names)) {
col_name <- indv_names[i] #thank you data.frame
col <- df_samesex_mm[, .data[col_name], drop = F]
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(col)) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
for(i in 1:length(state_names)) {
col_name <- indv_names[i] #thank you data.frame
col <- df_samesex_mm[, .data[[col_name]], drop = F]
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(col)) %>%
rename(!!total_names[i] := column) #thank you chatgpt
}
test <- indv_names[1]
df_samesex_mm[, ..test, drop = F]
df_samesex_mm[[test]]
total_names <- paste(state_names, "excluded_total", sep = "_")
for(i in 1:length(state_names)) {
col_name <- indv_names[i] #thank you data.frame
col <- df_samesex_mm[[col_name]]
df_samesex_mm <- df_samesex_mm %>%
group_by(YEAR) %>%
mutate(column = sum(col)) %>%
rename(!!total_names[i] := column)%>% #thank you chatgpt
ungroup()
}
gc()
df_samesex_mm <- df_samesex %>%
filter(AGE >= 30 & AGE <= 64) %>%
filter(YEAR >= 2001 & YEAR <= 2015) %>% ##interesting include 2001
filter(MARST == 4 | MARST == 5 | MARST == 6) %>% #includes those divorced, widowed, never married/single (NOTE: this excludes those married, separated, blank/missing)
filter(!is.na(MIGPLAC1)) #get interstate migrants only
test_data <- df_samesex %>%
filter(in_samesex == 1)
gc()
write.csv(test_data, "C:\\Users\\njrich\\Desktop\\same-sex-migration\\test_data.csv")
rm(list = ls())
gc()
